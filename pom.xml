<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>es.um.asio</groupId>
	<artifactId>discovery</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>UM - ASIO - discovery</name>
	<description>UM - ASIO - discovery</description>

	<scm>
		<url>scm:git:https://github.com/HerculesCRUE/ib-discovery.git</url>
	</scm>

	<properties>
		<java.version>11</java.version>
		<resource.delimiter>@</resource.delimiter> <!-- delimiter that doesn't clash with Spring ${} placeholders -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<dependency.check.report.dir>target/dependency-check</dependency.check.report.dir>
		<sonar.dependencyCheck.reportPath>${dependency.check.report.dir}/dependency-check-report.xml</sonar.dependencyCheck.reportPath>
		<sonar.dependencyCheck.htmlReportPath>${dependency.check.report.dir}/dependency-check-report.html</sonar.dependencyCheck.htmlReportPath>
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<nvd.mirror.url>http://192.168.1.246:9082</nvd.mirror.url>

		<!-- sonar -->
		<sonar.sources>pom.xml,src/main</sonar.sources>
		<sonar.tests></sonar.tests>

		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		
		<com.google.guava.version>28.2-jre</com.google.guava.version>
		<com.sun.xml.bind.jaxb.version>2.3.0.1</com.sun.xml.bind.jaxb.version>
		<de.siegmar.logback.version>1.1.0</de.siegmar.logback.version>
		<io.springfox.version>2.9.2</io.springfox.version>
		<org.mapstruct.version>1.3.1.Final</org.mapstruct.version>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.war.plugin.version>3.2.2</maven.war.plugin.version>
		<org.infinispan.starter.version>2.1.7.Final</org.infinispan.starter.version>
		<org.springframework.security.oauth.version>2.3.8.RELEASE</org.springframework.security.oauth.version>
		<org.jsoup.version>1.12.1</org.jsoup.version>
		<org.hibernate.hibernate-jpamodelgen.version>5.4.10.Final</org.hibernate.hibernate-jpamodelgen.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${com.google.guava.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${com.sun.xml.bind.jaxb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${com.sun.xml.bind.jaxb.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${org.jsoup.version}</version>
			</dependency>

			<dependency>
				<groupId>de.siegmar</groupId>
				<artifactId>logback-gelf</artifactId>
				<version>${de.siegmar.logback.version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${io.springfox.version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${io.springfox.version}</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-spring-boot-starter</artifactId>
				<version>${org.infinispan.starter.version}</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-spring-boot-starter-embedded</artifactId>
				<version>${org.infinispan.starter.version}</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-spring-boot-starter-remote</artifactId>
				<version>${org.infinispan.starter.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-slf4j-impl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${org.mapstruct.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-processor</artifactId>
				<version>${org.mapstruct.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${org.springframework.security.oauth.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<modules>
		<module>discovery-back</module>
		<module>discovery-service</module>
		<module>discovery-swagger</module>
	</modules>
	
	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.gif</exclude>
					<exclude>**/*.jpg</exclude>
					<exclude>**/*.png</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.gif</include>
					<include>**/*.jpg</include>
					<include>**/*.png</include>
				</includes>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
					<configuration>
						<webResources>
							<webResource>
								<filtering>true</filtering>
								<directory>src/main/webapp</directory>
								<includes>
									<include>META-INF/context.xml</include>
								</includes>
							</webResource>
						</webResources>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${org.mapstruct.version}</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
							<path>
								<groupId>org.hibernate</groupId>
								<artifactId>hibernate-jpamodelgen</artifactId>
								<version>${org.hibernate.hibernate-jpamodelgen.version}</version>
							</path>
						</annotationProcessorPaths>

						<compilerArgs>
							<!-- This arg ensures that mapstruct generate a Spring -->
							<!-- Bean out of every mapper implementation -->
							<compilerArg>-Amapstruct.defaultComponentModel=spring</compilerArg>
							<compilerArg>-Amapstruct.suppressGeneratorTimestamp=true</compilerArg>
							<compilerArg>-Amapstruct.suppressGeneratorVersionInfoComment=true</compilerArg>
						</compilerArgs>
					</configuration>

				</plugin>

				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<delimiters>
							<delimiter>@</delimiter>
						</delimiters>
						<useDefaultDelimiters>true</useDefaultDelimiters>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.7</version>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.4</version>
				</plugin>
				<plugin>
					<groupId>org.owasp</groupId>
					<artifactId>dependency-check-maven</artifactId>
					<version>5.2.2</version>
					<configuration>
						<cveUrlModified>${nvd.mirror.url}/nvdcve-1.0-modified.json.gz</cveUrlModified>
						<cveUrlBase>${nvd.mirror.url}/nvdcve-1.0-%d.json.gz</cveUrlBase>
						<format>ALL</format>
						<outputDirectory>${dependency.check.report.dir}</outputDirectory>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>

				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>snapshot</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-no-releases</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireSnapshotVersion>
											<message>No Releases Allowed!</message>
											<failWhenParentIsRelease>false</failWhenParentIsRelease>
										</requireSnapshotVersion>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-no-snapshots</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireReleaseVersion>
											<message>No Snapshots Allowed!</message>
											<failWhenParentIsSnapshot>true</failWhenParentIsSnapshot>
										</requireReleaseVersion>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>